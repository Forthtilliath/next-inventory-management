// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// https://github.com/chrishoermann/zod-prisma-types
generator zod {
  provider         = "bunx zod-prisma-types"
  output           = "./zod"
  useMultipleFiles = true
  createInputTypes = false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId String @id
  name   String
  email  String
}

model Product {
  productId     String     @id
  name          String
  price         Float
  rating        Float?
  stockQuantity Int
  //
  sales         Sale[]
  purchases     Purchase[]
}

model Sale {
  saleId      String   @id
  productId   String
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  //
  product     Product  @relation(fields: [productId], references: [productId])
}

model Purchase {
  purchaseId String   @id
  productId  String
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float
  //
  product    Product  @relation(fields: [productId], references: [productId])
}

model Expense {
  expenseId String   @id
  category  String
  amount    Float
  timestamp DateTime
}

model SaleSummary {
  salesSummaryId   String   @id
  totalValue       Float
  changePercentage Float?
  date             DateTime
}

model PurchaseSummary {
  purchaseSummaryId String   @id
  totalPurchased    Float
  changePercentage  Float?
  date              DateTime
}

model ExpenseSummary {
  expenseSummaryId  String                     @id
  totalExpenses     Float
  date              DateTime
  //
  expenseByCategory ExpenseSummaryByCategory[]
}

model ExpenseSummaryByCategory {
  expenseByCategoryId String         @id
  expenseSummaryId    String
  category            String
  amount              Int
  date                DateTime
  //
  expenseSummary      ExpenseSummary @relation(fields: [expenseSummaryId], references: [expenseSummaryId])
}
